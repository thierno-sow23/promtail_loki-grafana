# HELP cortex_cache_corrupt_chunks_total Total count of corrupt chunks found in cache.
# TYPE cortex_cache_corrupt_chunks_total counter
cortex_cache_corrupt_chunks_total 0
# HELP cortex_chunk_store_chunks_per_query Distribution of #chunks per query.
# TYPE cortex_chunk_store_chunks_per_query histogram
cortex_chunk_store_chunks_per_query_bucket{le="10"} 0
cortex_chunk_store_chunks_per_query_bucket{le="80"} 0
cortex_chunk_store_chunks_per_query_bucket{le="640"} 0
cortex_chunk_store_chunks_per_query_bucket{le="5120"} 0
cortex_chunk_store_chunks_per_query_bucket{le="40960"} 0
cortex_chunk_store_chunks_per_query_bucket{le="327680"} 0
cortex_chunk_store_chunks_per_query_bucket{le="2.62144e+06"} 0
cortex_chunk_store_chunks_per_query_bucket{le="+Inf"} 0
cortex_chunk_store_chunks_per_query_sum 0
cortex_chunk_store_chunks_per_query_count 0
# HELP cortex_chunk_store_deduped_chunks_total Count of chunks which were not stored because they have already been stored by another replica.
# TYPE cortex_chunk_store_deduped_chunks_total counter
cortex_chunk_store_deduped_chunks_total 0
# HELP cortex_chunk_store_index_entries_per_chunk Number of entries written to storage per chunk.
# TYPE cortex_chunk_store_index_entries_per_chunk histogram
cortex_chunk_store_index_entries_per_chunk_bucket{le="1"} 0
cortex_chunk_store_index_entries_per_chunk_bucket{le="2"} 0
cortex_chunk_store_index_entries_per_chunk_bucket{le="4"} 0
cortex_chunk_store_index_entries_per_chunk_bucket{le="8"} 4
cortex_chunk_store_index_entries_per_chunk_bucket{le="16"} 4
cortex_chunk_store_index_entries_per_chunk_bucket{le="+Inf"} 4
cortex_chunk_store_index_entries_per_chunk_sum 20
cortex_chunk_store_index_entries_per_chunk_count 4
# HELP cortex_chunk_store_index_lookups_per_query Distribution of #index lookups per query.
# TYPE cortex_chunk_store_index_lookups_per_query histogram
cortex_chunk_store_index_lookups_per_query_bucket{le="1"} 0
cortex_chunk_store_index_lookups_per_query_bucket{le="2"} 0
cortex_chunk_store_index_lookups_per_query_bucket{le="4"} 0
cortex_chunk_store_index_lookups_per_query_bucket{le="8"} 0
cortex_chunk_store_index_lookups_per_query_bucket{le="16"} 0
cortex_chunk_store_index_lookups_per_query_bucket{le="+Inf"} 0
cortex_chunk_store_index_lookups_per_query_sum 0
cortex_chunk_store_index_lookups_per_query_count 0
# HELP cortex_chunk_store_series_post_intersection_per_query Distribution of #series (post intersection) per query.
# TYPE cortex_chunk_store_series_post_intersection_per_query histogram
cortex_chunk_store_series_post_intersection_per_query_bucket{le="10"} 0
cortex_chunk_store_series_post_intersection_per_query_bucket{le="80"} 0
cortex_chunk_store_series_post_intersection_per_query_bucket{le="640"} 0
cortex_chunk_store_series_post_intersection_per_query_bucket{le="5120"} 0
cortex_chunk_store_series_post_intersection_per_query_bucket{le="40960"} 0
cortex_chunk_store_series_post_intersection_per_query_bucket{le="327680"} 0
cortex_chunk_store_series_post_intersection_per_query_bucket{le="+Inf"} 0
cortex_chunk_store_series_post_intersection_per_query_sum 0
cortex_chunk_store_series_post_intersection_per_query_count 0
# HELP cortex_chunk_store_series_pre_intersection_per_query Distribution of #series (pre intersection) per query.
# TYPE cortex_chunk_store_series_pre_intersection_per_query histogram
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="10"} 0
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="80"} 0
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="640"} 0
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="5120"} 0
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="40960"} 0
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="327680"} 0
cortex_chunk_store_series_pre_intersection_per_query_bucket{le="+Inf"} 0
cortex_chunk_store_series_pre_intersection_per_query_sum 0
cortex_chunk_store_series_pre_intersection_per_query_count 0
# HELP cortex_chunk_store_stored_chunk_bytes_total Total bytes stored in chunks per user.
# TYPE cortex_chunk_store_stored_chunk_bytes_total counter
cortex_chunk_store_stored_chunk_bytes_total{user="fake"} 7761
# HELP cortex_chunk_store_stored_chunks_total Total stored chunks per user.
# TYPE cortex_chunk_store_stored_chunks_total counter
cortex_chunk_store_stored_chunks_total{user="fake"} 4
# HELP cortex_consul_request_duration_seconds Time spent on consul requests.
# TYPE cortex_consul_request_duration_seconds histogram
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.005"} 36
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.01"} 37
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.025"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.05"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.1"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.25"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="0.5"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="1"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="2.5"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="5"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="10"} 38
cortex_consul_request_duration_seconds_bucket{operation="CAS loop",status_code="200",le="+Inf"} 38
cortex_consul_request_duration_seconds_sum{operation="CAS loop",status_code="200"} 0.025865333999999993
cortex_consul_request_duration_seconds_count{operation="CAS loop",status_code="200"} 38
# HELP cortex_deprecated_flags_inuse_total The number of deprecated flags currently set.
# TYPE cortex_deprecated_flags_inuse_total counter
cortex_deprecated_flags_inuse_total 0
# HELP cortex_distributor_ingester_clients The current number of ingester clients.
# TYPE cortex_distributor_ingester_clients gauge
cortex_distributor_ingester_clients 0
# HELP cortex_distributor_replication_factor The configured replication factor.
# TYPE cortex_distributor_replication_factor gauge
cortex_distributor_replication_factor 0
# HELP cortex_experimental_features_in_use_total The number of experimental features in use.
# TYPE cortex_experimental_features_in_use_total counter
cortex_experimental_features_in_use_total 0
# HELP cortex_ha_tracker_elected_replica_change_propagation_time_seconds The time it for the distributor to update the replica change.
# TYPE cortex_ha_tracker_elected_replica_change_propagation_time_seconds histogram
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.005"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.01"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.025"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.05"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.1"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.25"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="0.5"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="1"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="2.5"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="5"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="10"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_bucket{le="+Inf"} 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_sum 0
cortex_ha_tracker_elected_replica_change_propagation_time_seconds_count 0
# HELP cortex_ingester_flush_queue_length The total number of series pending in the flush queue.
# TYPE cortex_ingester_flush_queue_length gauge
cortex_ingester_flush_queue_length 0
# HELP cortex_kv_request_duration_seconds Time spent on kv store requests.
# TYPE cortex_kv_request_duration_seconds histogram
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.005"} 36
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.01"} 37
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.025"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.05"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.1"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.25"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="0.5"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="1"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="2.5"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="5"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="10"} 38
cortex_kv_request_duration_seconds_bucket{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory",le="+Inf"} 38
cortex_kv_request_duration_seconds_sum{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory"} 0.026356529999999996
cortex_kv_request_duration_seconds_count{kv_name="ingester-lifecycler",operation="CAS",role="primary",status_code="200",type="inmemory"} 38
# HELP cortex_labels_per_sample Number of labels per sample.
# TYPE cortex_labels_per_sample histogram
cortex_labels_per_sample_bucket{le="5"} 0
cortex_labels_per_sample_bucket{le="10"} 0
cortex_labels_per_sample_bucket{le="15"} 0
cortex_labels_per_sample_bucket{le="20"} 0
cortex_labels_per_sample_bucket{le="25"} 0
cortex_labels_per_sample_bucket{le="+Inf"} 0
cortex_labels_per_sample_sum 0
cortex_labels_per_sample_count 0
# HELP cortex_member_consul_heartbeats_total The total number of heartbeats sent to consul.
# TYPE cortex_member_consul_heartbeats_total counter
cortex_member_consul_heartbeats_total{name="ingester"} 36
# HELP cortex_member_ring_tokens_owned The number of tokens owned in the ring.
# TYPE cortex_member_ring_tokens_owned gauge
cortex_member_ring_tokens_owned{name="ingester"} 128
# HELP cortex_member_ring_tokens_to_own The number of tokens to own in the ring.
# TYPE cortex_member_ring_tokens_to_own gauge
cortex_member_ring_tokens_to_own{name="ingester"} 128
# HELP cortex_multikv_mirror_enabled Is mirroring to secondary store enabled
# TYPE cortex_multikv_mirror_enabled gauge
cortex_multikv_mirror_enabled 0
# HELP cortex_multikv_mirror_write_errors_total Number of failures to mirror-write to secondary store
# TYPE cortex_multikv_mirror_write_errors_total counter
cortex_multikv_mirror_write_errors_total 0
# HELP cortex_multikv_mirror_writes_total Number of mirror-writes to secondary store
# TYPE cortex_multikv_mirror_writes_total counter
cortex_multikv_mirror_writes_total 0
# HELP cortex_ring_member_ownership_percent The percent ownership of the ring by member
# TYPE cortex_ring_member_ownership_percent gauge
cortex_ring_member_ownership_percent{member="63732429dce3",name="ingester"} 1
# HELP cortex_ring_members Number of members in the ring
# TYPE cortex_ring_members gauge
cortex_ring_members{name="ingester",state="ACTIVE"} 1
cortex_ring_members{name="ingester",state="JOINING"} 0
cortex_ring_members{name="ingester",state="LEAVING"} 0
cortex_ring_members{name="ingester",state="PENDING"} 0
cortex_ring_members{name="ingester",state="Unhealthy"} 0
# HELP cortex_ring_oldest_member_timestamp Timestamp of the oldest member in the ring.
# TYPE cortex_ring_oldest_member_timestamp gauge
cortex_ring_oldest_member_timestamp{name="ingester",state="ACTIVE"} 1.72838878e+09
cortex_ring_oldest_member_timestamp{name="ingester",state="JOINING"} 0
cortex_ring_oldest_member_timestamp{name="ingester",state="LEAVING"} 0
cortex_ring_oldest_member_timestamp{name="ingester",state="PENDING"} 0
cortex_ring_oldest_member_timestamp{name="ingester",state="Unhealthy"} 0
# HELP cortex_ring_tokens_owned The number of tokens in the ring owned by the member
# TYPE cortex_ring_tokens_owned gauge
cortex_ring_tokens_owned{member="63732429dce3",name="ingester"} 128
# HELP cortex_ring_tokens_total Number of tokens in the ring
# TYPE cortex_ring_tokens_total gauge
cortex_ring_tokens_total{name="ingester"} 128
# HELP cortex_ruler_managers_total Total number of managers registered and running in the ruler
# TYPE cortex_ruler_managers_total gauge
cortex_ruler_managers_total 0
# HELP cortex_ruler_ring_check_errors_total Number of errors that have occurred when checking the ring for ownership
# TYPE cortex_ruler_ring_check_errors_total counter
cortex_ruler_ring_check_errors_total 0
# HELP cortex_ruler_sync_rules_total Total number of times the ruler sync operation triggered.
# TYPE cortex_ruler_sync_rules_total counter
cortex_ruler_sync_rules_total{reason="initial"} 1
cortex_ruler_sync_rules_total{reason="periodic"} 3
# HELP cortex_table_capacity_units Per-table capacity, measured in DynamoDB capacity units.
# TYPE cortex_table_capacity_units gauge
cortex_table_capacity_units{op="read",table="index_20004"} 0
cortex_table_capacity_units{op="write",table="index_20004"} 0
# HELP cortex_table_manager_create_failures Number of table creation failures during the last table-manager reconciliation
# TYPE cortex_table_manager_create_failures gauge
cortex_table_manager_create_failures 0
# HELP cortex_table_manager_delete_failures Number of table deletion failures during the last table-manager reconciliation
# TYPE cortex_table_manager_delete_failures gauge
cortex_table_manager_delete_failures 0
# HELP cortex_table_manager_sync_duration_seconds Time spent synching tables.
# TYPE cortex_table_manager_sync_duration_seconds histogram
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.005"} 0
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.01"} 0
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.025"} 0
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.05"} 1
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.1"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.25"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="0.5"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="1"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="2.5"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="5"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="10"} 2
cortex_table_manager_sync_duration_seconds_bucket{operation="TableManager.SyncTables",status_code="200",le="+Inf"} 2
cortex_table_manager_sync_duration_seconds_sum{operation="TableManager.SyncTables",status_code="200"} 0.090205944
cortex_table_manager_sync_duration_seconds_count{operation="TableManager.SyncTables",status_code="200"} 2
# HELP cortex_table_manager_sync_success_timestamp_seconds Timestamp of the last successful table manager sync.
# TYPE cortex_table_manager_sync_success_timestamp_seconds gauge
cortex_table_manager_sync_success_timestamp_seconds 1.7283887208193085e+09
# HELP etcd_debugging_auth_revision The current revision of auth store.
# TYPE etcd_debugging_auth_revision gauge
etcd_debugging_auth_revision 0
# HELP etcd_debugging_disk_backend_commit_rebalance_duration_seconds The latency distributions of commit.rebalance called by bboltdb backend.
# TYPE etcd_debugging_disk_backend_commit_rebalance_duration_seconds histogram
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.001"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.002"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.004"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.008"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.016"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.032"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.064"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.128"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.256"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="0.512"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="1.024"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="2.048"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="4.096"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="8.192"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket{le="+Inf"} 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_sum 0
etcd_debugging_disk_backend_commit_rebalance_duration_seconds_count 0
# HELP etcd_debugging_disk_backend_commit_spill_duration_seconds The latency distributions of commit.spill called by bboltdb backend.
# TYPE etcd_debugging_disk_backend_commit_spill_duration_seconds histogram
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.001"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.002"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.004"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.008"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.016"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.032"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.064"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.128"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.256"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="0.512"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="1.024"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="2.048"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="4.096"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="8.192"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket{le="+Inf"} 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_sum 0
etcd_debugging_disk_backend_commit_spill_duration_seconds_count 0
# HELP etcd_debugging_disk_backend_commit_write_duration_seconds The latency distributions of commit.write called by bboltdb backend.
# TYPE etcd_debugging_disk_backend_commit_write_duration_seconds histogram
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.001"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.002"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.004"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.008"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.016"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.032"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.064"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.128"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.256"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="0.512"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="1.024"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="2.048"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="4.096"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="8.192"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_bucket{le="+Inf"} 0
etcd_debugging_disk_backend_commit_write_duration_seconds_sum 0
etcd_debugging_disk_backend_commit_write_duration_seconds_count 0
# HELP etcd_debugging_lease_granted_total The total number of granted leases.
# TYPE etcd_debugging_lease_granted_total counter
etcd_debugging_lease_granted_total 0
# HELP etcd_debugging_lease_renewed_total The number of renewed leases seen by the leader.
# TYPE etcd_debugging_lease_renewed_total counter
etcd_debugging_lease_renewed_total 0
# HELP etcd_debugging_lease_revoked_total The total number of revoked leases.
# TYPE etcd_debugging_lease_revoked_total counter
etcd_debugging_lease_revoked_total 0
# HELP etcd_debugging_lease_ttl_total Bucketed histogram of lease TTLs.
# TYPE etcd_debugging_lease_ttl_total histogram
etcd_debugging_lease_ttl_total_bucket{le="1"} 0
etcd_debugging_lease_ttl_total_bucket{le="2"} 0
etcd_debugging_lease_ttl_total_bucket{le="4"} 0
etcd_debugging_lease_ttl_total_bucket{le="8"} 0
etcd_debugging_lease_ttl_total_bucket{le="16"} 0
etcd_debugging_lease_ttl_total_bucket{le="32"} 0
etcd_debugging_lease_ttl_total_bucket{le="64"} 0
etcd_debugging_lease_ttl_total_bucket{le="128"} 0
etcd_debugging_lease_ttl_total_bucket{le="256"} 0
etcd_debugging_lease_ttl_total_bucket{le="512"} 0
etcd_debugging_lease_ttl_total_bucket{le="1024"} 0
etcd_debugging_lease_ttl_total_bucket{le="2048"} 0
etcd_debugging_lease_ttl_total_bucket{le="4096"} 0
etcd_debugging_lease_ttl_total_bucket{le="8192"} 0
etcd_debugging_lease_ttl_total_bucket{le="16384"} 0
etcd_debugging_lease_ttl_total_bucket{le="32768"} 0
etcd_debugging_lease_ttl_total_bucket{le="65536"} 0
etcd_debugging_lease_ttl_total_bucket{le="131072"} 0
etcd_debugging_lease_ttl_total_bucket{le="262144"} 0
etcd_debugging_lease_ttl_total_bucket{le="524288"} 0
etcd_debugging_lease_ttl_total_bucket{le="1.048576e+06"} 0
etcd_debugging_lease_ttl_total_bucket{le="2.097152e+06"} 0
etcd_debugging_lease_ttl_total_bucket{le="4.194304e+06"} 0
etcd_debugging_lease_ttl_total_bucket{le="8.388608e+06"} 0
etcd_debugging_lease_ttl_total_bucket{le="+Inf"} 0
etcd_debugging_lease_ttl_total_sum 0
etcd_debugging_lease_ttl_total_count 0
# HELP etcd_debugging_mvcc_compact_revision The revision of the last compaction in store.
# TYPE etcd_debugging_mvcc_compact_revision gauge
etcd_debugging_mvcc_compact_revision 0
# HELP etcd_debugging_mvcc_current_revision The current revision of store.
# TYPE etcd_debugging_mvcc_current_revision gauge
etcd_debugging_mvcc_current_revision 0
# HELP etcd_debugging_mvcc_db_compaction_keys_total Total number of db keys compacted.
# TYPE etcd_debugging_mvcc_db_compaction_keys_total counter
etcd_debugging_mvcc_db_compaction_keys_total 0
# HELP etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds Bucketed histogram of db compaction pause duration.
# TYPE etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds histogram
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="1"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="2"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="4"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="8"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="16"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="32"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="64"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="128"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="256"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="512"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="1024"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="2048"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="4096"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket{le="+Inf"} 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_sum 0
etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_count 0
# HELP etcd_debugging_mvcc_db_compaction_total_duration_milliseconds Bucketed histogram of db compaction total duration.
# TYPE etcd_debugging_mvcc_db_compaction_total_duration_milliseconds histogram
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="100"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="200"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="400"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="800"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="1600"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="3200"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="6400"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="12800"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="25600"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="51200"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="102400"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="204800"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="409600"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="819200"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket{le="+Inf"} 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_sum 0
etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_count 0
# HELP etcd_debugging_mvcc_db_total_size_in_bytes Total size of the underlying database physically allocated in bytes.
# TYPE etcd_debugging_mvcc_db_total_size_in_bytes gauge
etcd_debugging_mvcc_db_total_size_in_bytes 0
# HELP etcd_debugging_mvcc_delete_total Total number of deletes seen by this member.
# TYPE etcd_debugging_mvcc_delete_total counter
etcd_debugging_mvcc_delete_total 0
# HELP etcd_debugging_mvcc_events_total Total number of events sent by this member.
# TYPE etcd_debugging_mvcc_events_total counter
etcd_debugging_mvcc_events_total 0
# HELP etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds Bucketed histogram of index compaction pause duration.
# TYPE etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds histogram
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="0.5"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="1"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="2"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="4"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="8"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="16"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="32"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="64"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="128"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="256"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="512"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="1024"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="2048"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="4096"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket{le="+Inf"} 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_sum 0
etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_count 0
# HELP etcd_debugging_mvcc_keys_total Total number of keys.
# TYPE etcd_debugging_mvcc_keys_total gauge
etcd_debugging_mvcc_keys_total 0
# HELP etcd_debugging_mvcc_pending_events_total Total number of pending events to be sent.
# TYPE etcd_debugging_mvcc_pending_events_total gauge
etcd_debugging_mvcc_pending_events_total 0
# HELP etcd_debugging_mvcc_put_total Total number of puts seen by this member.
# TYPE etcd_debugging_mvcc_put_total counter
etcd_debugging_mvcc_put_total 0
# HELP etcd_debugging_mvcc_range_total Total number of ranges seen by this member.
# TYPE etcd_debugging_mvcc_range_total counter
etcd_debugging_mvcc_range_total 0
# HELP etcd_debugging_mvcc_slow_watcher_total Total number of unsynced slow watchers.
# TYPE etcd_debugging_mvcc_slow_watcher_total gauge
etcd_debugging_mvcc_slow_watcher_total 0
# HELP etcd_debugging_mvcc_total_put_size_in_bytes The total size of put kv pairs seen by this member.
# TYPE etcd_debugging_mvcc_total_put_size_in_bytes gauge
etcd_debugging_mvcc_total_put_size_in_bytes 0
# HELP etcd_debugging_mvcc_txn_total Total number of txns seen by this member.
# TYPE etcd_debugging_mvcc_txn_total counter
etcd_debugging_mvcc_txn_total 0
# HELP etcd_debugging_mvcc_watch_stream_total Total number of watch streams.
# TYPE etcd_debugging_mvcc_watch_stream_total gauge
etcd_debugging_mvcc_watch_stream_total 0
# HELP etcd_debugging_mvcc_watcher_total Total number of watchers.
# TYPE etcd_debugging_mvcc_watcher_total gauge
etcd_debugging_mvcc_watcher_total 0
# HELP etcd_debugging_server_lease_expired_total The total number of expired leases.
# TYPE etcd_debugging_server_lease_expired_total counter
etcd_debugging_server_lease_expired_total 0
# HELP etcd_debugging_snap_save_marshalling_duration_seconds The marshalling cost distributions of save called by snapshot.
# TYPE etcd_debugging_snap_save_marshalling_duration_seconds histogram
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.001"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.002"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.004"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.008"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.016"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.032"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.064"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.128"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.256"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="0.512"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="1.024"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="2.048"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="4.096"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="8.192"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_bucket{le="+Inf"} 0
etcd_debugging_snap_save_marshalling_duration_seconds_sum 0
etcd_debugging_snap_save_marshalling_duration_seconds_count 0
# HELP etcd_debugging_snap_save_total_duration_seconds The total latency distributions of save called by snapshot.
# TYPE etcd_debugging_snap_save_total_duration_seconds histogram
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.001"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.002"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.004"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.008"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.016"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.032"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.064"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.128"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.256"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="0.512"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="1.024"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="2.048"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="4.096"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="8.192"} 0
etcd_debugging_snap_save_total_duration_seconds_bucket{le="+Inf"} 0
etcd_debugging_snap_save_total_duration_seconds_sum 0
etcd_debugging_snap_save_total_duration_seconds_count 0
# HELP etcd_debugging_store_expires_total Total number of expired keys.
# TYPE etcd_debugging_store_expires_total counter
etcd_debugging_store_expires_total 0
# HELP etcd_debugging_store_watch_requests_total Total number of incoming watch requests (new or reestablished).
# TYPE etcd_debugging_store_watch_requests_total counter
etcd_debugging_store_watch_requests_total 0
# HELP etcd_debugging_store_watchers Count of currently active watchers.
# TYPE etcd_debugging_store_watchers gauge
etcd_debugging_store_watchers 0
# HELP etcd_disk_backend_commit_duration_seconds The latency distributions of commit called by backend.
# TYPE etcd_disk_backend_commit_duration_seconds histogram
etcd_disk_backend_commit_duration_seconds_bucket{le="0.001"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.002"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.004"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.008"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.016"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.032"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.064"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.128"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.256"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="0.512"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="1.024"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="2.048"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="4.096"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="8.192"} 0
etcd_disk_backend_commit_duration_seconds_bucket{le="+Inf"} 0
etcd_disk_backend_commit_duration_seconds_sum 0
etcd_disk_backend_commit_duration_seconds_count 0
# HELP etcd_disk_backend_defrag_duration_seconds The latency distribution of backend defragmentation.
# TYPE etcd_disk_backend_defrag_duration_seconds histogram
etcd_disk_backend_defrag_duration_seconds_bucket{le="0.1"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="0.2"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="0.4"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="0.8"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="1.6"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="3.2"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="6.4"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="12.8"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="25.6"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="51.2"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="102.4"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="204.8"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="409.6"} 0
etcd_disk_backend_defrag_duration_seconds_bucket{le="+Inf"} 0
etcd_disk_backend_defrag_duration_seconds_sum 0
etcd_disk_backend_defrag_duration_seconds_count 0
# HELP etcd_disk_backend_snapshot_duration_seconds The latency distribution of backend snapshots.
# TYPE etcd_disk_backend_snapshot_duration_seconds histogram
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.01"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.02"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.04"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.08"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.16"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.32"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="0.64"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="1.28"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="2.56"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="5.12"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="10.24"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="20.48"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="40.96"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="81.92"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="163.84"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="327.68"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="655.36"} 0
etcd_disk_backend_snapshot_duration_seconds_bucket{le="+Inf"} 0
etcd_disk_backend_snapshot_duration_seconds_sum 0
etcd_disk_backend_snapshot_duration_seconds_count 0
# HELP etcd_disk_wal_fsync_duration_seconds The latency distributions of fsync called by WAL.
# TYPE etcd_disk_wal_fsync_duration_seconds histogram
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.001"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.002"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.004"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.008"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.016"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.032"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.064"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.128"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.256"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="0.512"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="1.024"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="2.048"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="4.096"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="8.192"} 0
etcd_disk_wal_fsync_duration_seconds_bucket{le="+Inf"} 0
etcd_disk_wal_fsync_duration_seconds_sum 0
etcd_disk_wal_fsync_duration_seconds_count 0
# HELP etcd_disk_wal_write_bytes_total Total number of bytes written in WAL.
# TYPE etcd_disk_wal_write_bytes_total gauge
etcd_disk_wal_write_bytes_total 0
# HELP etcd_mvcc_db_open_read_transactions The number of currently open read transactions
# TYPE etcd_mvcc_db_open_read_transactions gauge
etcd_mvcc_db_open_read_transactions 0
# HELP etcd_mvcc_db_total_size_in_bytes Total size of the underlying database physically allocated in bytes.
# TYPE etcd_mvcc_db_total_size_in_bytes gauge
etcd_mvcc_db_total_size_in_bytes 0
# HELP etcd_mvcc_db_total_size_in_use_in_bytes Total size of the underlying database logically in use in bytes.
# TYPE etcd_mvcc_db_total_size_in_use_in_bytes gauge
etcd_mvcc_db_total_size_in_use_in_bytes 0
# HELP etcd_mvcc_delete_total Total number of deletes seen by this member.
# TYPE etcd_mvcc_delete_total counter
etcd_mvcc_delete_total 0
# HELP etcd_mvcc_hash_duration_seconds The latency distribution of storage hash operation.
# TYPE etcd_mvcc_hash_duration_seconds histogram
etcd_mvcc_hash_duration_seconds_bucket{le="0.01"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="0.02"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="0.04"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="0.08"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="0.16"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="0.32"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="0.64"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="1.28"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="2.56"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="5.12"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="10.24"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="20.48"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="40.96"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="81.92"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="163.84"} 0
etcd_mvcc_hash_duration_seconds_bucket{le="+Inf"} 0
etcd_mvcc_hash_duration_seconds_sum 0
etcd_mvcc_hash_duration_seconds_count 0
# HELP etcd_mvcc_hash_rev_duration_seconds The latency distribution of storage hash by revision operation.
# TYPE etcd_mvcc_hash_rev_duration_seconds histogram
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.01"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.02"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.04"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.08"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.16"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.32"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="0.64"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="1.28"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="2.56"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="5.12"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="10.24"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="20.48"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="40.96"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="81.92"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="163.84"} 0
etcd_mvcc_hash_rev_duration_seconds_bucket{le="+Inf"} 0
etcd_mvcc_hash_rev_duration_seconds_sum 0
etcd_mvcc_hash_rev_duration_seconds_count 0
# HELP etcd_mvcc_put_total Total number of puts seen by this member.
# TYPE etcd_mvcc_put_total counter
etcd_mvcc_put_total 0
# HELP etcd_mvcc_range_total Total number of ranges seen by this member.
# TYPE etcd_mvcc_range_total counter
etcd_mvcc_range_total 0
# HELP etcd_mvcc_txn_total Total number of txns seen by this member.
# TYPE etcd_mvcc_txn_total counter
etcd_mvcc_txn_total 0
# HELP etcd_network_client_grpc_received_bytes_total The total number of bytes received from grpc clients.
# TYPE etcd_network_client_grpc_received_bytes_total counter
etcd_network_client_grpc_received_bytes_total 0
# HELP etcd_network_client_grpc_sent_bytes_total The total number of bytes sent to grpc clients.
# TYPE etcd_network_client_grpc_sent_bytes_total counter
etcd_network_client_grpc_sent_bytes_total 0
# HELP etcd_server_go_version Which Go version server is running with. 1 for 'server_go_version' label with current version.
# TYPE etcd_server_go_version gauge
etcd_server_go_version{server_go_version="go1.15.3"} 1
# HELP etcd_server_has_leader Whether or not a leader exists. 1 is existence, 0 is not.
# TYPE etcd_server_has_leader gauge
etcd_server_has_leader 0
# HELP etcd_server_health_failures The total number of failed health checks
# TYPE etcd_server_health_failures counter
etcd_server_health_failures 0
# HELP etcd_server_health_success The total number of successful health checks
# TYPE etcd_server_health_success counter
etcd_server_health_success 0
# HELP etcd_server_heartbeat_send_failures_total The total number of leader heartbeat send failures (likely overloaded from slow disk).
# TYPE etcd_server_heartbeat_send_failures_total counter
etcd_server_heartbeat_send_failures_total 0
# HELP etcd_server_is_leader Whether or not this member is a leader. 1 if is, 0 otherwise.
# TYPE etcd_server_is_leader gauge
etcd_server_is_leader 0
# HELP etcd_server_is_learner Whether or not this member is a learner. 1 if is, 0 otherwise.
# TYPE etcd_server_is_learner gauge
etcd_server_is_learner 0
# HELP etcd_server_leader_changes_seen_total The number of leader changes seen.
# TYPE etcd_server_leader_changes_seen_total counter
etcd_server_leader_changes_seen_total 0
# HELP etcd_server_learner_promote_successes The total number of successful learner promotions while this member is leader.
# TYPE etcd_server_learner_promote_successes counter
etcd_server_learner_promote_successes 0
# HELP etcd_server_proposals_applied_total The total number of consensus proposals applied.
# TYPE etcd_server_proposals_applied_total gauge
etcd_server_proposals_applied_total 0
# HELP etcd_server_proposals_committed_total The total number of consensus proposals committed.
# TYPE etcd_server_proposals_committed_total gauge
etcd_server_proposals_committed_total 0
# HELP etcd_server_proposals_failed_total The total number of failed proposals seen.
# TYPE etcd_server_proposals_failed_total counter
etcd_server_proposals_failed_total 0
# HELP etcd_server_proposals_pending The current number of pending proposals to commit.
# TYPE etcd_server_proposals_pending gauge
etcd_server_proposals_pending 0
# HELP etcd_server_quota_backend_bytes Current backend storage quota size in bytes.
# TYPE etcd_server_quota_backend_bytes gauge
etcd_server_quota_backend_bytes 0
# HELP etcd_server_read_indexes_failed_total The total number of failed read indexes seen.
# TYPE etcd_server_read_indexes_failed_total counter
etcd_server_read_indexes_failed_total 0
# HELP etcd_server_slow_apply_total The total number of slow apply requests (likely overloaded from slow disk).
# TYPE etcd_server_slow_apply_total counter
etcd_server_slow_apply_total 0
# HELP etcd_server_slow_read_indexes_total The total number of pending read indexes not in sync with leader's or timed out read index requests.
# TYPE etcd_server_slow_read_indexes_total counter
etcd_server_slow_read_indexes_total 0
# HELP etcd_server_snapshot_apply_in_progress_total 1 if the server is applying the incoming snapshot. 0 if none.
# TYPE etcd_server_snapshot_apply_in_progress_total gauge
etcd_server_snapshot_apply_in_progress_total 0
# HELP etcd_server_version Which version is running. 1 for 'server_version' label with current version.
# TYPE etcd_server_version gauge
etcd_server_version{server_version="3.4.9"} 1
# HELP etcd_snap_db_fsync_duration_seconds The latency distributions of fsyncing .snap.db file
# TYPE etcd_snap_db_fsync_duration_seconds histogram
etcd_snap_db_fsync_duration_seconds_bucket{le="0.001"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.002"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.004"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.008"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.016"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.032"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.064"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.128"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.256"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="0.512"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="1.024"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="2.048"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="4.096"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="8.192"} 0
etcd_snap_db_fsync_duration_seconds_bucket{le="+Inf"} 0
etcd_snap_db_fsync_duration_seconds_sum 0
etcd_snap_db_fsync_duration_seconds_count 0
# HELP etcd_snap_db_save_total_duration_seconds The total latency distributions of v3 snapshot save
# TYPE etcd_snap_db_save_total_duration_seconds histogram
etcd_snap_db_save_total_duration_seconds_bucket{le="0.1"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="0.2"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="0.4"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="0.8"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="1.6"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="3.2"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="6.4"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="12.8"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="25.6"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="51.2"} 0
etcd_snap_db_save_total_duration_seconds_bucket{le="+Inf"} 0
etcd_snap_db_save_total_duration_seconds_sum 0
etcd_snap_db_save_total_duration_seconds_count 0
# HELP etcd_snap_fsync_duration_seconds The latency distributions of fsync called by snap.
# TYPE etcd_snap_fsync_duration_seconds histogram
etcd_snap_fsync_duration_seconds_bucket{le="0.001"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.002"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.004"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.008"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.016"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.032"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.064"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.128"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.256"} 0
etcd_snap_fsync_duration_seconds_bucket{le="0.512"} 0
etcd_snap_fsync_duration_seconds_bucket{le="1.024"} 0
etcd_snap_fsync_duration_seconds_bucket{le="2.048"} 0
etcd_snap_fsync_duration_seconds_bucket{le="4.096"} 0
etcd_snap_fsync_duration_seconds_bucket{le="8.192"} 0
etcd_snap_fsync_duration_seconds_bucket{le="+Inf"} 0
etcd_snap_fsync_duration_seconds_sum 0
etcd_snap_fsync_duration_seconds_count 0
# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 0.000381322
go_gc_duration_seconds{quantile="0.25"} 0.000482107
go_gc_duration_seconds{quantile="0.5"} 0.000531442
go_gc_duration_seconds{quantile="0.75"} 0.000953026
go_gc_duration_seconds{quantile="1"} 0.001568643
go_gc_duration_seconds_sum 0.00538714
go_gc_duration_seconds_count 8
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 97
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.15.3"} 1
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 1.4028488e+07
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 3.9912968e+07
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.458932e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 168312
# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.
# TYPE go_memstats_gc_cpu_fraction gauge
go_memstats_gc_cpu_fraction 0.00017833410568864543
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 5.606224e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 1.4028488e+07
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 4.9201152e+07
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 1.67936e+07
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 33722
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 3.9329792e+07
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 6.5994752e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.728388720842095e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 202034
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 3472
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 150824
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 229376
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 2.7062768e+07
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 636348
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 1.114112e+06
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 1.114112e+06
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 7.5056128e+07
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 10
# HELP jaeger_tracer_baggage_restrictions_updates_total Number of times baggage restrictions were successfully updated
# TYPE jaeger_tracer_baggage_restrictions_updates_total counter
jaeger_tracer_baggage_restrictions_updates_total{result="err"} 0
jaeger_tracer_baggage_restrictions_updates_total{result="ok"} 0
# HELP jaeger_tracer_baggage_truncations_total Number of times baggage was truncated as per baggage restrictions
# TYPE jaeger_tracer_baggage_truncations_total counter
jaeger_tracer_baggage_truncations_total 0
# HELP jaeger_tracer_baggage_updates_total Number of times baggage was successfully written or updated on spans
# TYPE jaeger_tracer_baggage_updates_total counter
jaeger_tracer_baggage_updates_total{result="err"} 0
jaeger_tracer_baggage_updates_total{result="ok"} 0
# HELP jaeger_tracer_finished_spans_total Number of sampled spans finished by this tracer
# TYPE jaeger_tracer_finished_spans_total counter
jaeger_tracer_finished_spans_total{sampled="delayed"} 0
jaeger_tracer_finished_spans_total{sampled="n"} 86
jaeger_tracer_finished_spans_total{sampled="y"} 0
# HELP jaeger_tracer_reporter_queue_length Current number of spans in the reporter queue
# TYPE jaeger_tracer_reporter_queue_length gauge
jaeger_tracer_reporter_queue_length 0
# HELP jaeger_tracer_reporter_spans_total Number of spans successfully reported
# TYPE jaeger_tracer_reporter_spans_total counter
jaeger_tracer_reporter_spans_total{result="dropped"} 0
jaeger_tracer_reporter_spans_total{result="err"} 0
jaeger_tracer_reporter_spans_total{result="ok"} 0
# HELP jaeger_tracer_sampler_queries_total Number of times the Sampler succeeded to retrieve sampling strategy
# TYPE jaeger_tracer_sampler_queries_total counter
jaeger_tracer_sampler_queries_total{result="err"} 3
jaeger_tracer_sampler_queries_total{result="ok"} 0
# HELP jaeger_tracer_sampler_updates_total Number of times the Sampler succeeded to retrieve and update sampling strategy
# TYPE jaeger_tracer_sampler_updates_total counter
jaeger_tracer_sampler_updates_total{result="err"} 0
jaeger_tracer_sampler_updates_total{result="ok"} 0
# HELP jaeger_tracer_span_context_decoding_errors_total Number of errors decoding tracing context
# TYPE jaeger_tracer_span_context_decoding_errors_total counter
jaeger_tracer_span_context_decoding_errors_total 0
# HELP jaeger_tracer_started_spans_total Number of spans started by this tracer as sampled
# TYPE jaeger_tracer_started_spans_total counter
jaeger_tracer_started_spans_total{sampled="delayed"} 0
jaeger_tracer_started_spans_total{sampled="n"} 88
jaeger_tracer_started_spans_total{sampled="y"} 0
# HELP jaeger_tracer_throttled_debug_spans_total Number of times debug spans were throttled
# TYPE jaeger_tracer_throttled_debug_spans_total counter
jaeger_tracer_throttled_debug_spans_total 0
# HELP jaeger_tracer_throttler_updates_total Number of times throttler successfully updated
# TYPE jaeger_tracer_throttler_updates_total counter
jaeger_tracer_throttler_updates_total{result="err"} 0
jaeger_tracer_throttler_updates_total{result="ok"} 0
# HELP jaeger_tracer_traces_total Number of traces started by this tracer as sampled
# TYPE jaeger_tracer_traces_total counter
jaeger_tracer_traces_total{sampled="n",state="joined"} 0
jaeger_tracer_traces_total{sampled="n",state="started"} 46
jaeger_tracer_traces_total{sampled="y",state="joined"} 0
jaeger_tracer_traces_total{sampled="y",state="started"} 0
# HELP log_messages_total Total number of log messages.
# TYPE log_messages_total counter
log_messages_total{level="debug"} 3367
log_messages_total{level="error"} 1
log_messages_total{level="info"} 2937
log_messages_total{level="warn"} 0
# HELP loki_boltdb_shipper_compact_tables_operation_duration_seconds Time (in seconds) spent in compacting all the tables
# TYPE loki_boltdb_shipper_compact_tables_operation_duration_seconds gauge
loki_boltdb_shipper_compact_tables_operation_duration_seconds 0.001500672
# HELP loki_boltdb_shipper_compact_tables_operation_last_successful_run_timestamp_seconds Unix timestamp of the last successful compaction run
# TYPE loki_boltdb_shipper_compact_tables_operation_last_successful_run_timestamp_seconds gauge
loki_boltdb_shipper_compact_tables_operation_last_successful_run_timestamp_seconds 1.7283886007906327e+09
# HELP loki_boltdb_shipper_compact_tables_operation_total Total number of tables compaction done by status
# TYPE loki_boltdb_shipper_compact_tables_operation_total counter
loki_boltdb_shipper_compact_tables_operation_total{status="success"} 1
# HELP loki_boltdb_shipper_initial_tables_download_duration_seconds Time (in seconds) spent in downloading of files per table, initially i.e for the first time
# TYPE loki_boltdb_shipper_initial_tables_download_duration_seconds gauge
loki_boltdb_shipper_initial_tables_download_duration_seconds 0
# HELP loki_boltdb_shipper_initial_tables_download_size_bytes Size of files (in bytes) downloaded per table, initially i.e for the first time
# TYPE loki_boltdb_shipper_initial_tables_download_size_bytes gauge
loki_boltdb_shipper_initial_tables_download_size_bytes 0
# HELP loki_boltdb_shipper_request_duration_seconds Time (in seconds) spent serving requests when using boltdb shipper
# TYPE loki_boltdb_shipper_request_duration_seconds histogram
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.005"} 0
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.01"} 0
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.025"} 0
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.05"} 2
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.1"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.25"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="0.5"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="1"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="2.5"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="5"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="10"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="25"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="50"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="100"} 4
loki_boltdb_shipper_request_duration_seconds_bucket{operation="WRITE",status_code="200",le="+Inf"} 4
loki_boltdb_shipper_request_duration_seconds_sum{operation="WRITE",status_code="200"} 0.20988111599999998
loki_boltdb_shipper_request_duration_seconds_count{operation="WRITE",status_code="200"} 4
# HELP loki_boltdb_shipper_tables_upload_operation_total Total number of upload operations done by status
# TYPE loki_boltdb_shipper_tables_upload_operation_total counter
loki_boltdb_shipper_tables_upload_operation_total{status="success"} 4
# HELP loki_build_info A metric with a constant '1' value labeled by version, revision, branch, and goversion from which loki was built.
# TYPE loki_build_info gauge
loki_build_info{branch="HEAD",goversion="go1.15.3",revision="babea82ef",version="2.2.1"} 1
# HELP loki_inflight_requests Current number of inflight requests.
# TYPE loki_inflight_requests gauge
loki_inflight_requests{method="GET",route="metrics"} 1
# HELP loki_ingester_blocks_per_chunk The number of blocks in a chunk.
# TYPE loki_ingester_blocks_per_chunk histogram
loki_ingester_blocks_per_chunk_bucket{le="5"} 0
loki_ingester_blocks_per_chunk_bucket{le="10"} 0
loki_ingester_blocks_per_chunk_bucket{le="20"} 0
loki_ingester_blocks_per_chunk_bucket{le="40"} 0
loki_ingester_blocks_per_chunk_bucket{le="80"} 0
loki_ingester_blocks_per_chunk_bucket{le="160"} 0
loki_ingester_blocks_per_chunk_bucket{le="+Inf"} 0
loki_ingester_blocks_per_chunk_sum 0
loki_ingester_blocks_per_chunk_count 0
# HELP loki_ingester_checkpoint_creations_failed_total Total number of checkpoint creations that failed.
# TYPE loki_ingester_checkpoint_creations_failed_total counter
loki_ingester_checkpoint_creations_failed_total 0
# HELP loki_ingester_checkpoint_creations_total Total number of checkpoint creations attempted.
# TYPE loki_ingester_checkpoint_creations_total counter
loki_ingester_checkpoint_creations_total 0
# HELP loki_ingester_checkpoint_deletions_failed_total Total number of checkpoint deletions that failed.
# TYPE loki_ingester_checkpoint_deletions_failed_total counter
loki_ingester_checkpoint_deletions_failed_total 0
# HELP loki_ingester_checkpoint_deletions_total Total number of checkpoint deletions attempted.
# TYPE loki_ingester_checkpoint_deletions_total counter
loki_ingester_checkpoint_deletions_total 0
# HELP loki_ingester_checkpoint_duration_seconds Time taken to create a checkpoint.
# TYPE loki_ingester_checkpoint_duration_seconds summary
loki_ingester_checkpoint_duration_seconds{quantile="0.5"} NaN
loki_ingester_checkpoint_duration_seconds{quantile="0.9"} NaN
loki_ingester_checkpoint_duration_seconds{quantile="0.99"} NaN
loki_ingester_checkpoint_duration_seconds_sum 0
loki_ingester_checkpoint_duration_seconds_count 0
# HELP loki_ingester_checkpoint_logged_bytes_total Total number of bytes written to disk for checkpointing.
# TYPE loki_ingester_checkpoint_logged_bytes_total counter
loki_ingester_checkpoint_logged_bytes_total 0
# HELP loki_ingester_chunk_age_seconds Distribution of chunk ages (when stored).
# TYPE loki_ingester_chunk_age_seconds histogram
loki_ingester_chunk_age_seconds_bucket{le="60"} 0
loki_ingester_chunk_age_seconds_bucket{le="300"} 0
loki_ingester_chunk_age_seconds_bucket{le="600"} 0
loki_ingester_chunk_age_seconds_bucket{le="1800"} 0
loki_ingester_chunk_age_seconds_bucket{le="3600"} 0
loki_ingester_chunk_age_seconds_bucket{le="7200"} 0
loki_ingester_chunk_age_seconds_bucket{le="14400"} 4
loki_ingester_chunk_age_seconds_bucket{le="36000"} 4
loki_ingester_chunk_age_seconds_bucket{le="43200"} 4
loki_ingester_chunk_age_seconds_bucket{le="57600"} 4
loki_ingester_chunk_age_seconds_bucket{le="+Inf"} 4
loki_ingester_chunk_age_seconds_sum 36376.801924814
loki_ingester_chunk_age_seconds_count 4
# HELP loki_ingester_chunk_bounds_hours Distribution of chunk end-start durations.
# TYPE loki_ingester_chunk_bounds_hours histogram
loki_ingester_chunk_bounds_hours_bucket{le="1"} 4
loki_ingester_chunk_bounds_hours_bucket{le="2"} 4
loki_ingester_chunk_bounds_hours_bucket{le="3"} 4
loki_ingester_chunk_bounds_hours_bucket{le="4"} 4
loki_ingester_chunk_bounds_hours_bucket{le="5"} 4
loki_ingester_chunk_bounds_hours_bucket{le="6"} 4
loki_ingester_chunk_bounds_hours_bucket{le="7"} 4
loki_ingester_chunk_bounds_hours_bucket{le="8"} 4
loki_ingester_chunk_bounds_hours_bucket{le="+Inf"} 4
loki_ingester_chunk_bounds_hours_sum 0.00018715432055555557
loki_ingester_chunk_bounds_hours_count 4
# HELP loki_ingester_chunk_compression_ratio Compression ratio of chunks (when stored).
# TYPE loki_ingester_chunk_compression_ratio histogram
loki_ingester_chunk_compression_ratio_bucket{le="0.75"} 0
loki_ingester_chunk_compression_ratio_bucket{le="2.75"} 0
loki_ingester_chunk_compression_ratio_bucket{le="4.75"} 2
loki_ingester_chunk_compression_ratio_bucket{le="6.75"} 3
loki_ingester_chunk_compression_ratio_bucket{le="8.75"} 4
loki_ingester_chunk_compression_ratio_bucket{le="10.75"} 4
loki_ingester_chunk_compression_ratio_bucket{le="12.75"} 4
loki_ingester_chunk_compression_ratio_bucket{le="14.75"} 4
loki_ingester_chunk_compression_ratio_bucket{le="16.75"} 4
loki_ingester_chunk_compression_ratio_bucket{le="18.75"} 4
loki_ingester_chunk_compression_ratio_bucket{le="+Inf"} 4
loki_ingester_chunk_compression_ratio_sum 19.515754641981637
loki_ingester_chunk_compression_ratio_count 4
# HELP loki_ingester_chunk_encode_time_seconds Distribution of chunk encode times.
# TYPE loki_ingester_chunk_encode_time_seconds histogram
loki_ingester_chunk_encode_time_seconds_bucket{le="0.01"} 3
loki_ingester_chunk_encode_time_seconds_bucket{le="0.04"} 4
loki_ingester_chunk_encode_time_seconds_bucket{le="0.16"} 4
loki_ingester_chunk_encode_time_seconds_bucket{le="0.64"} 4
loki_ingester_chunk_encode_time_seconds_bucket{le="2.56"} 4
loki_ingester_chunk_encode_time_seconds_bucket{le="10.24"} 4
loki_ingester_chunk_encode_time_seconds_bucket{le="+Inf"} 4
loki_ingester_chunk_encode_time_seconds_sum 0.013319553000000001
loki_ingester_chunk_encode_time_seconds_count 4
# HELP loki_ingester_chunk_entries Distribution of stored lines per chunk (when stored).
# TYPE loki_ingester_chunk_entries histogram
loki_ingester_chunk_entries_bucket{le="200"} 3
loki_ingester_chunk_entries_bucket{le="400"} 3
loki_ingester_chunk_entries_bucket{le="800"} 3
loki_ingester_chunk_entries_bucket{le="1600"} 3
loki_ingester_chunk_entries_bucket{le="3200"} 3
loki_ingester_chunk_entries_bucket{le="6400"} 3
loki_ingester_chunk_entries_bucket{le="12800"} 4
loki_ingester_chunk_entries_bucket{le="25600"} 4
loki_ingester_chunk_entries_bucket{le="51200"} 4
loki_ingester_chunk_entries_bucket{le="+Inf"} 4
loki_ingester_chunk_entries_sum 7761
loki_ingester_chunk_entries_count 4
# HELP loki_ingester_chunk_size_bytes Distribution of stored chunk sizes (when stored).
# TYPE loki_ingester_chunk_size_bytes histogram
loki_ingester_chunk_size_bytes_bucket{le="20000"} 3
loki_ingester_chunk_size_bytes_bucket{le="40000"} 3
loki_ingester_chunk_size_bytes_bucket{le="80000"} 3
loki_ingester_chunk_size_bytes_bucket{le="160000"} 4
loki_ingester_chunk_size_bytes_bucket{le="320000"} 4
loki_ingester_chunk_size_bytes_bucket{le="640000"} 4
loki_ingester_chunk_size_bytes_bucket{le="1.28e+06"} 4
loki_ingester_chunk_size_bytes_bucket{le="2.56e+06"} 4
loki_ingester_chunk_size_bytes_bucket{le="5.12e+06"} 4
loki_ingester_chunk_size_bytes_bucket{le="1.024e+07"} 4
loki_ingester_chunk_size_bytes_bucket{le="+Inf"} 4
loki_ingester_chunk_size_bytes_sum 112917
loki_ingester_chunk_size_bytes_count 4
# HELP loki_ingester_chunk_stored_bytes_total Total bytes stored in chunks per tenant.
# TYPE loki_ingester_chunk_stored_bytes_total counter
loki_ingester_chunk_stored_bytes_total{tenant="fake"} 112917
# HELP loki_ingester_chunk_utilization Distribution of stored chunk utilization (when stored).
# TYPE loki_ingester_chunk_utilization histogram
loki_ingester_chunk_utilization_bucket{le="0"} 0
loki_ingester_chunk_utilization_bucket{le="0.2"} 4
loki_ingester_chunk_utilization_bucket{le="0.4"} 4
loki_ingester_chunk_utilization_bucket{le="0.6000000000000001"} 4
loki_ingester_chunk_utilization_bucket{le="0.8"} 4
loki_ingester_chunk_utilization_bucket{le="1"} 4
loki_ingester_chunk_utilization_bucket{le="+Inf"} 4
loki_ingester_chunk_utilization_sum 0.1066293716430664
loki_ingester_chunk_utilization_count 4
# HELP loki_ingester_chunks_created_total The total number of chunks created in the ingester.
# TYPE loki_ingester_chunks_created_total counter
loki_ingester_chunks_created_total 0
# HELP loki_ingester_chunks_flushed_total Total flushed chunks per reason.
# TYPE loki_ingester_chunks_flushed_total counter
loki_ingester_chunks_flushed_total{reason="idle"} 4
# HELP loki_ingester_chunks_stored_total Total stored chunks per tenant.
# TYPE loki_ingester_chunks_stored_total counter
loki_ingester_chunks_stored_total{tenant="fake"} 4
# HELP loki_ingester_memory_chunks The total number of chunks in memory.
# TYPE loki_ingester_memory_chunks gauge
loki_ingester_memory_chunks -4
# HELP loki_ingester_memory_streams The total number of streams in memory per tenant.
# TYPE loki_ingester_memory_streams gauge
loki_ingester_memory_streams{tenant="fake"} 2
# HELP loki_ingester_received_chunks The total number of chunks received by this ingester whilst joining.
# TYPE loki_ingester_received_chunks counter
loki_ingester_received_chunks 0
# HELP loki_ingester_samples_per_chunk The number of samples in a chunk.
# TYPE loki_ingester_samples_per_chunk histogram
loki_ingester_samples_per_chunk_bucket{le="4096"} 0
loki_ingester_samples_per_chunk_bucket{le="6144"} 0
loki_ingester_samples_per_chunk_bucket{le="8192"} 0
loki_ingester_samples_per_chunk_bucket{le="10240"} 0
loki_ingester_samples_per_chunk_bucket{le="12288"} 0
loki_ingester_samples_per_chunk_bucket{le="14336"} 0
loki_ingester_samples_per_chunk_bucket{le="+Inf"} 0
loki_ingester_samples_per_chunk_sum 0
loki_ingester_samples_per_chunk_count 0
# HELP loki_ingester_sent_chunks The total number of chunks sent by this ingester whilst leaving.
# TYPE loki_ingester_sent_chunks counter
loki_ingester_sent_chunks 0
# HELP loki_ingester_streams_created_total The total number of streams created per tenant.
# TYPE loki_ingester_streams_created_total counter
loki_ingester_streams_created_total{tenant="fake"} 6
# HELP loki_ingester_streams_removed_total The total number of streams removed per tenant.
# TYPE loki_ingester_streams_removed_total counter
loki_ingester_streams_removed_total{tenant="fake"} 4
# HELP loki_ingester_wal_bytes_in_use Total number of bytes in use by the WAL recovery process.
# TYPE loki_ingester_wal_bytes_in_use gauge
loki_ingester_wal_bytes_in_use 50665
# HELP loki_ingester_wal_disk_full_failures_total Total number of wal write failures due to full disk.
# TYPE loki_ingester_wal_disk_full_failures_total counter
loki_ingester_wal_disk_full_failures_total 0
# HELP loki_ingester_wal_logged_bytes_total Total number of bytes written to disk for WAL records.
# TYPE loki_ingester_wal_logged_bytes_total counter
loki_ingester_wal_logged_bytes_total 0
# HELP loki_ingester_wal_records_logged_total Total number of WAL records logged.
# TYPE loki_ingester_wal_records_logged_total counter
loki_ingester_wal_records_logged_total 0
# HELP loki_ingester_wal_recovered_bytes_total Total number of bytes recovered from the WAL.
# TYPE loki_ingester_wal_recovered_bytes_total counter
loki_ingester_wal_recovered_bytes_total 599686
# HELP loki_ingester_wal_recovered_chunks_total Total number of chunks recovered from the WAL checkpoints.
# TYPE loki_ingester_wal_recovered_chunks_total counter
loki_ingester_wal_recovered_chunks_total 6
# HELP loki_ingester_wal_recovered_entries_total Total number of entries recovered from the WAL.
# TYPE loki_ingester_wal_recovered_entries_total counter
loki_ingester_wal_recovered_entries_total 8516
# HELP loki_ingester_wal_recovered_streams_total Total number of streams recovered from the WAL.
# TYPE loki_ingester_wal_recovered_streams_total counter
loki_ingester_wal_recovered_streams_total 6
# HELP loki_ingester_wal_replay_duration_seconds Time taken to replay the checkpoint and the WAL.
# TYPE loki_ingester_wal_replay_duration_seconds gauge
loki_ingester_wal_replay_duration_seconds 0.052709151
# HELP loki_ingester_wal_replay_flushing Whether the wal replay is in a flushing phase due to backpressure
# TYPE loki_ingester_wal_replay_flushing gauge
loki_ingester_wal_replay_flushing 0
# HELP loki_logql_querystats_duplicates_total Total count of duplicates found while executing LogQL queries.
# TYPE loki_logql_querystats_duplicates_total counter
loki_logql_querystats_duplicates_total 0
# HELP loki_logql_querystats_ingester_sent_lines_total Total count of lines sent from ingesters while executing LogQL queries.
# TYPE loki_logql_querystats_ingester_sent_lines_total counter
loki_logql_querystats_ingester_sent_lines_total 0
# HELP loki_panic_total The total number of panic triggered
# TYPE loki_panic_total counter
loki_panic_total 0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 0.91
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1.048576e+06
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 17
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 6.8001792e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.7283885924e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 7.76179712e+08
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes -1
# HELP prometheus_api_remote_read_queries The current number of remote read queries being executed or waiting.
# TYPE prometheus_api_remote_read_queries gauge
prometheus_api_remote_read_queries 0
# HELP prometheus_local_storage_memory_chunkdescs The current number of chunk descriptors in memory.
# TYPE prometheus_local_storage_memory_chunkdescs gauge
prometheus_local_storage_memory_chunkdescs 0
# HELP prometheus_remote_storage_samples_in_total Samples in to remote storage, compare to samples out for queue managers.
# TYPE prometheus_remote_storage_samples_in_total counter
prometheus_remote_storage_samples_in_total 0
# HELP prometheus_remote_storage_string_interner_zero_reference_releases_total The number of times release has been called for strings that are not interned.
# TYPE prometheus_remote_storage_string_interner_zero_reference_releases_total counter
prometheus_remote_storage_string_interner_zero_reference_releases_total 0
# HELP prometheus_sd_dns_lookup_failures_total The number of DNS-SD lookup failures.
# TYPE prometheus_sd_dns_lookup_failures_total counter
prometheus_sd_dns_lookup_failures_total 0
# HELP prometheus_sd_dns_lookups_total The number of DNS-SD lookups.
# TYPE prometheus_sd_dns_lookups_total counter
prometheus_sd_dns_lookups_total 0
# HELP prometheus_sd_file_read_errors_total The number of File-SD read errors.
# TYPE prometheus_sd_file_read_errors_total counter
prometheus_sd_file_read_errors_total 0
# HELP prometheus_sd_file_scan_duration_seconds The duration of the File-SD scan in seconds.
# TYPE prometheus_sd_file_scan_duration_seconds summary
prometheus_sd_file_scan_duration_seconds{quantile="0.5"} NaN
prometheus_sd_file_scan_duration_seconds{quantile="0.9"} NaN
prometheus_sd_file_scan_duration_seconds{quantile="0.99"} NaN
prometheus_sd_file_scan_duration_seconds_sum 0
prometheus_sd_file_scan_duration_seconds_count 0
# HELP prometheus_target_scrape_pool_exceeded_target_limit_total Total number of times scrape pools hit the target limit, during sync or config reload.
# TYPE prometheus_target_scrape_pool_exceeded_target_limit_total counter
prometheus_target_scrape_pool_exceeded_target_limit_total 0
# HELP prometheus_target_scrape_pool_reloads_failed_total Total number of failed scrape pool reloads.
# TYPE prometheus_target_scrape_pool_reloads_failed_total counter
prometheus_target_scrape_pool_reloads_failed_total 0
# HELP prometheus_target_scrape_pool_reloads_total Total number of scrape pool reloads.
# TYPE prometheus_target_scrape_pool_reloads_total counter
prometheus_target_scrape_pool_reloads_total 0
# HELP prometheus_target_scrape_pools_failed_total Total number of scrape pool creations that failed.
# TYPE prometheus_target_scrape_pools_failed_total counter
prometheus_target_scrape_pools_failed_total 0
# HELP prometheus_target_scrape_pools_total Total number of scrape pool creation attempts.
# TYPE prometheus_target_scrape_pools_total counter
prometheus_target_scrape_pools_total 0
# HELP prometheus_target_scrapes_cache_flush_forced_total How many times a scrape cache was flushed due to getting big while scrapes are failing.
# TYPE prometheus_target_scrapes_cache_flush_forced_total counter
prometheus_target_scrapes_cache_flush_forced_total 0
# HELP prometheus_target_scrapes_exceeded_sample_limit_total Total number of scrapes that hit the sample limit and were rejected.
# TYPE prometheus_target_scrapes_exceeded_sample_limit_total counter
prometheus_target_scrapes_exceeded_sample_limit_total 0
# HELP prometheus_target_scrapes_sample_duplicate_timestamp_total Total number of samples rejected due to duplicate timestamps but different values
# TYPE prometheus_target_scrapes_sample_duplicate_timestamp_total counter
prometheus_target_scrapes_sample_duplicate_timestamp_total 0
# HELP prometheus_target_scrapes_sample_out_of_bounds_total Total number of samples rejected due to timestamp falling outside of the time bounds
# TYPE prometheus_target_scrapes_sample_out_of_bounds_total counter
prometheus_target_scrapes_sample_out_of_bounds_total 0
# HELP prometheus_target_scrapes_sample_out_of_order_total Total number of samples rejected due to not being out of the expected order
# TYPE prometheus_target_scrapes_sample_out_of_order_total counter
prometheus_target_scrapes_sample_out_of_order_total 0
# HELP prometheus_template_text_expansion_failures_total The total number of template text expansion failures.
# TYPE prometheus_template_text_expansion_failures_total counter
prometheus_template_text_expansion_failures_total 0
# HELP prometheus_template_text_expansions_total The total number of template text expansions.
# TYPE prometheus_template_text_expansions_total counter
prometheus_template_text_expansions_total 0
# HELP prometheus_tsdb_wal_completed_pages_total Total number of completed pages.
# TYPE prometheus_tsdb_wal_completed_pages_total counter
prometheus_tsdb_wal_completed_pages_total 0
# HELP prometheus_tsdb_wal_fsync_duration_seconds Duration of WAL fsync.
# TYPE prometheus_tsdb_wal_fsync_duration_seconds summary
prometheus_tsdb_wal_fsync_duration_seconds{quantile="0.5"} NaN
prometheus_tsdb_wal_fsync_duration_seconds{quantile="0.9"} NaN
prometheus_tsdb_wal_fsync_duration_seconds{quantile="0.99"} NaN
prometheus_tsdb_wal_fsync_duration_seconds_sum 0
prometheus_tsdb_wal_fsync_duration_seconds_count 0
# HELP prometheus_tsdb_wal_page_flushes_total Total number of page flushes.
# TYPE prometheus_tsdb_wal_page_flushes_total counter
prometheus_tsdb_wal_page_flushes_total 0
# HELP prometheus_tsdb_wal_segment_current WAL segment index that TSDB is currently writing to.
# TYPE prometheus_tsdb_wal_segment_current gauge
prometheus_tsdb_wal_segment_current 10
# HELP prometheus_tsdb_wal_truncations_failed_total Total number of WAL truncations that failed.
# TYPE prometheus_tsdb_wal_truncations_failed_total counter
prometheus_tsdb_wal_truncations_failed_total 0
# HELP prometheus_tsdb_wal_truncations_total Total number of WAL truncations attempted.
# TYPE prometheus_tsdb_wal_truncations_total counter
prometheus_tsdb_wal_truncations_total 0
# HELP prometheus_tsdb_wal_writes_failed_total Total number of WAL writes that failed.
# TYPE prometheus_tsdb_wal_writes_failed_total counter
prometheus_tsdb_wal_writes_failed_total 0
# HELP querier_index_cache_corruptions_total The number of cache corruptions for the index cache.
# TYPE querier_index_cache_corruptions_total counter
querier_index_cache_corruptions_total 0
# HELP querier_index_cache_encode_errors_total The number of errors for the index cache while encoding the body.
# TYPE querier_index_cache_encode_errors_total counter
querier_index_cache_encode_errors_total 0
# HELP querier_index_cache_gets_total The number of gets for the index cache.
# TYPE querier_index_cache_gets_total counter
querier_index_cache_gets_total 0
# HELP querier_index_cache_hits_total The number of cache hits for the index cache.
# TYPE querier_index_cache_hits_total counter
querier_index_cache_hits_total 0
# HELP querier_index_cache_puts_total The number of puts for the index cache.
# TYPE querier_index_cache_puts_total counter
querier_index_cache_puts_total 0
